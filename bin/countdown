#!/usr/bin/env python

import itertools
import datetime
import sys
import time


def debug(routine):
    try:
        routine()
    except Exception:
        import pdb
        import sys
        import traceback
        extype, value, tb = sys.exc_info()
        traceback.print_exc()
        pdb.post_mortem(tb)


def hms(seconds):
    hours, remainder = divmod(seconds, 3600)
    minutes, seconds = divmod(remainder, 60)
    return (hours, minutes, seconds)


if __name__ == '__main__':
    seconds: int
    if sys.argv[1].startswith('--till='):
        h, _, m = sys.argv[1][len('--till='):].partition(':')
        now = datetime.datetime.now()
        target = now.replace(hour=int(h), minute=int(m), second=0)
        seconds = (target - now).seconds
    else:
        duration = sys.argv[1]
        time_list = [0, 0, 0]  # hour, minute, second
        unit_position = {'h': 0, 'm': 1, 's': 2}
        while True:
            if duration == '':
                break
            number_str = ''.join(itertools.takewhile(str.isdigit, duration))
            duration = duration[len(number_str):]
            if duration != '':
                unit = duration[0]
                pos = unit_position.get(unit)
                if pos is not None:
                    time_list[pos] = int(number_str)
                duration = duration[1:]
            else:
                time_list[2] = int(number_str)
        seconds = (time_list[0] * 60 + time_list[1]) * 60 + time_list[2]

    begin = time.time()

    for i in range(seconds):
        left = hms(seconds - i)
        left_repr = ':'.join('{:02d}'.format(i) for i in left)
        sys.stdout.write('{}/{} ({} left)\r'.format(i, seconds, left_repr))
        now = time.time()
        time.sleep(max(i + 1 - (now - begin) or 1, 0.1))
