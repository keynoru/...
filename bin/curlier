#!/usr/bin/env python

import itertools
import sys


def translate(path):
  dst = path[:-len('.p.scad')] + '.scad'
  with open(path, 'r') as srcf:
    with open(dst, 'w') as dstf:
      depth = 0
      while True:
        line = srcf.readline()
        if line == '':
          dstf.write('}' * (depth // 2))
          break
        if not line.strip():
          continue
        if line.lstrip().startswith('//'):
          continue

        this_depth = len(list(itertools.takewhile(lambda c: c == ' ', line)))
        if this_depth > depth:
          dstf.write('%s{\n' % ('  ' * (depth // 2)))
          depth = this_depth
        elif this_depth < depth:
          dstf.write('}' * ((depth - this_depth) // 2) + '\n')
          depth = this_depth
        dstf.write(line)


if __name__ == '__main__':
  path = sys.argv[1]
  if path.endswith('.p.scad'):
    print('Translating {}'.format(path))
    translate(path)
